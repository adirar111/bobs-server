datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Email {
  id String @id @default(cuid())
  address String @unique
  confirmed Boolean @default(false)
  subscribed Boolean @default(true)
  admins Admin[]
  posts Post[]
}

model Admin {
  id Int @id @default(autoincrement())
  email Email @relation(fields: [emailId], references: [id])
  emailId String @unique
  name String
  boxes Box[]
  counters Counter[]
}

model Box {
  id String @id @default(cuid())
  name String
  origin String
  owner Admin @relation(fields: [ownerId], references: [id])
  ownerId Int
  posts Post[]
  deleted Boolean @default(false)
}

model Counter {
  id String @id @default(cuid())
  name String
  origin String
  owner Admin @relation(fields: [ownerId], references: [id])
  ownerId Int
  count Int @default(0)
}

model Poster {
  id Int @id @default(autoincrement())
  ip String @unique
  posts Post[]
  karma Int @default(0)
}

model Post {
  id Int @id @default(autoincrement())
  userId String @unique @default(cuid())
  createdAt DateTime @default(now())
  from String
  dead Boolean @default(false)
  content String
  subscribed Boolean @default(true)
  poster Poster @relation(fields: [posterId], references: [id])
  posterId Int
  email Email? @relation(fields: [emailId], references: [id])
  emailId String?
  box Box @relation(fields: [boxId], references: [id])
  boxId String
  children Post[] @relation("PostChildren")
  parent Post? @relation("PostChildren", fields: [parentId], references: [id])
  parentId Int?
}

generator client {
  provider = "prisma-client-js"
}

